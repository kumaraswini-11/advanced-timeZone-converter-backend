// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider  = "postgresql"
  url       = env("POSTGRES_PRISMA_URL") // uses connection pooling
  directUrl = env("POSTGRES_URL_NON_POOLING") // uses a direct connection
}

enum Role {
  STUDENT
  TEACHER
}

model User {
  id          Int          @id @default(autoincrement())
  userName    String       @unique
  email       String?      @unique
  password    String
  role        Role?
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
  assignments Assignment[] @relation("TeacherAssignments")
  submissions Submission[] @relation("StudentSubmissions")
}

model Assignment {
  id          Int          @id @default(autoincrement())
  title       String
  description String?
  dueDate     DateTime
  totalScore  Int
  teacherId   Int
  teacher     User         @relation("TeacherAssignments", fields: [teacherId], references: [id])
  submissions Submission[]
  createdAt   DateTime     @default(now())
  updatedAt   DateTime     @updatedAt
}

model Submission {
  id           Int        @id @default(autoincrement())
  content      String
  grade        String?
  studentId    Int
  assignmentId Int
  student      User       @relation("StudentSubmissions", fields: [studentId], references: [id])
  assignment   Assignment @relation(fields: [assignmentId], references: [id])
  createdAt    DateTime   @default(now())
  updatedAt    DateTime   @updatedAt
}

// npx prisma migrate dev --name created_person_schema
// npx prisma generate
